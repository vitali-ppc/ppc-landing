import { NextRequest, NextResponse } from 'next/server';
import puppeteer from 'puppeteer';

export async function POST(request: NextRequest) {
  try {
    const { text, title = 'Chat Export' } = await request.json();
    
    if (!text) {
      return NextResponse.json({ error: 'Text is required' }, { status: 400 });
    }

    // Створюємо HTML контент для конвертації в PDF
    const htmlContent = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>${title}</title>
          <style>
            body {
              font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
              line-height: 1.6;
              color: #333;
              max-width: 800px;
              margin: 0 auto;
              padding: 20px;
            }
            h1 {
              color: #23272f;
              border-bottom: 2px solid #0ea5e9;
              padding-bottom: 10px;
            }
            .timestamp {
              color: #666;
              font-size: 14px;
              margin-bottom: 20px;
            }
            .content {
              white-space: pre-wrap;
              background: #f8f9fa;
              padding: 20px;
              border-radius: 8px;
              border-left: 4px solid #0ea5e9;
            }
            .footer {
              margin-top: 30px;
              text-align: center;
              color: #666;
              font-size: 12px;
              border-top: 1px solid #eee;
              padding-top: 20px;
            }
          </style>
        </head>
        <body>
          <h1>${title}</h1>
          <div class="timestamp">Generated on: ${new Date().toLocaleString()}</div>
          <div class="content">${text}</div>
          <div class="footer">
            Generated by PPCSet AI Assistant<br>
            https://www.ppcset.com
          </div>
        </body>
      </html>
    `;

    // Запускаємо браузер
    const browser = await puppeteer.launch({
      headless: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });

    // Створюємо нову сторінку
    const page = await browser.newPage();
    
    // Встановлюємо контент
    await page.setContent(htmlContent, { waitUntil: 'networkidle0' });
    
    // Генеруємо PDF
    const pdfBuffer = await page.pdf({
      format: 'A4',
      margin: {
        top: '20mm',
        right: '20mm',
        bottom: '20mm',
        left: '20mm'
      },
      printBackground: true
    });

    // Закриваємо браузер
    await browser.close();

    // Create filename with timestamp
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    const filename = `chat-export-${timestamp}.pdf`;

    // Set headers for PDF download
    const headers = new Headers();
    headers.set('Content-Type', 'application/pdf');
    headers.set('Content-Disposition', `attachment; filename="${filename}"`);

    return new NextResponse(pdfBuffer, {
      status: 200,
      headers: {
        'Content-Type': 'application/pdf',
        'Content-Disposition': `attachment; filename="${filename}"`
      }
    });

  } catch (error) {
    console.error('Export PDF error:', error);
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });
  }
} 